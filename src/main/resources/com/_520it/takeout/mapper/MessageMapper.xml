<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.takeout.mapper.MessageMapper" >
  <resultMap id="BaseResultMap" type="com._520it.takeout.domain.Message" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="openId" property="openid" jdbcType="VARCHAR" />
    <result column="sendContent" property="sendcontent" jdbcType="VARCHAR" />
    <result column="replyContent" property="replycontent" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="inputTime" property="inputtime" jdbcType="TIMESTAMP" />
    <association property="user" javaType="com._520it.takeout.domain.User">
      <id column="id" property="id"  />
      <result column="u_nickname" property="nickname"/>
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com._520it.takeout.domain.Message" useGeneratedKeys="true" keyProperty="id" >
    insert into message (openId, sendContent, replyContent, 
      type, inputTime)
    values (#{openid,jdbcType=VARCHAR}, #{sendcontent,jdbcType=VARCHAR}, #{replycontent,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{inputtime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com._520it.takeout.domain.Message" >
    update message
    set openId = #{openid,jdbcType=VARCHAR},
      sendContent = #{sendcontent,jdbcType=VARCHAR},
      replyContent = #{replycontent,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      inputTime = #{inputtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, openId, sendContent, replyContent, type, inputTime
    from message
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectAll" resultMap="BaseResultMap" >
    select m.*,u.nickname u_nickname
    from message m LEFT JOIN user u ON m.openId=u.openId
    <include refid="base_where"></include>
    limit  #{start},#{rows}
  </select>

  <select id="getTotalCount" resultType="long" >
    select COUNT(id)
    from message
    <include refid="base_where"></include>
  </select>

  <sql id="base_where">
    <where>
      <if test="minTime!=null">
       AND inputTime >= #{minTime}
      </if>
      <if test="maxTime!=null">
       AND inputTime &lt;= #{maxTime}
      </if>
      <if test="type!=null and type!=''">
       AND type LIKE concat("%",#{type},"%")
      </if>
    </where>
  </sql>
</mapper>