<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.takeout.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com._520it.takeout.domain.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="openId" property="openid" jdbcType="VARCHAR" />
    <result column="concernTime" property="concerntime" jdbcType="DATE" />
    <result column="cancelConcernTime" property="cancelconcerntime" jdbcType="DATE" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="languager" property="languager" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>

  <insert id="insert" parameterType="com._520it.takeout.domain.User" useGeneratedKeys="true" keyProperty="id" >
    insert into user (openId, concernTime, cancelConcernTime, 
      status, source,
      nickname, gender, country, 
      province, city, languager, 
      remark)
    values (#{openid,jdbcType=VARCHAR}, #{concerntime,jdbcType=DATE}, #{cancelconcerntime,jdbcType=DATE},
      #{status,jdbcType=INTEGER}, #{source,jdbcType=VARCHAR},
      #{nickname,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{country,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{languager,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com._520it.takeout.domain.User" >
    update user
     SET status = #{status,jdbcType=INTEGER},
     cancelconcerntime = #{cancelconcerntime,jdbcType=DATE}
    where openid = #{openid,jdbcType=BIGINT}
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, openId, concernTime, cancelConcernTime, status, source, nickname,
    gender, country, province, city, languager, remark
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectAll" resultMap="BaseResultMap" >
    select id, openId, concernTime, cancelConcernTime, status, source, nickname,
    gender, country, province, city, languager, remark
    from user
  </select>

  <select id="select" resultMap="BaseResultMap">
    select id, openId, concernTime, cancelConcernTime, status, source, nickname,
    gender, country, province, city, languager, remark
    from user
    where openid = #{openid,jdbcType=BIGINT}
  </select>

  <sql id="where_sql">
    <where>
      <if test="openid !=null and openid!=''">
        AND  openid LIKE  concat('%',#{openid},'%')
      </if>
    </where>
  </sql>
  
  <select id="queryPageCount" resultType="long">
    SELECT count(*) from user
    <include refid="where_sql"/>
  </select>

  <select id="queryPageResult" resultMap="BaseResultMap">
    SELECT * from user
    <include refid="where_sql"/>
    limit #{start},#{rows}
  </select>
</mapper>